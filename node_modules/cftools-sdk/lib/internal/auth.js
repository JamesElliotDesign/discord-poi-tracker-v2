"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NoOpAuthorizationProvider = exports.EnterpriseAuthorizationProvider = exports.CFToolsAuthorizationProvider = void 0;
var types_1 = require("../types");
var got_1 = require("got");
var CFToolsAuthorizationProvider = /** @class */ (function () {
    function CFToolsAuthorizationProvider(credentials) {
        this.credentials = credentials;
        if (process.env.CFTOOLS_API_TOKEN) {
            this.setToken(process.env.CFTOOLS_API_TOKEN);
        }
    }
    CFToolsAuthorizationProvider.prototype.provide = function (client) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!this.hasToken()) return [3 /*break*/, 1];
                        return [2 /*return*/, new types_1.BearerAuthorization(types_1.AuthorizationType.BEARER, this.token, this.created, this.expired)];
                    case 1:
                        _a = types_1.BearerAuthorization.bind;
                        _b = [void 0, types_1.AuthorizationType.BEARER];
                        return [4 /*yield*/, this.fetchToken(client)];
                    case 2: return [2 /*return*/, new (_a.apply(types_1.BearerAuthorization, _b.concat([_c.sent(), this.created, this.expired])))()];
                }
            });
        });
    };
    CFToolsAuthorizationProvider.prototype.reportExpired = function () {
        this.token = undefined;
        this.expired = undefined;
    };
    CFToolsAuthorizationProvider.prototype.fetchTokenHeaders = function () {
        return {};
    };
    CFToolsAuthorizationProvider.prototype.setToken = function (token) {
        this.token = token;
        this.created = new Date();
        this.expired = new Date();
        this.expired.setDate(this.expired.getHours() + 23);
    };
    CFToolsAuthorizationProvider.prototype.hasToken = function () {
        return !!this.token && this.expired !== undefined && this.expired.getTime() >= new Date().getTime();
    };
    CFToolsAuthorizationProvider.prototype.fetchToken = function (client) {
        return __awaiter(this, void 0, void 0, function () {
            var response, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, client.post('v1/auth/register', {
                                headers: this.fetchTokenHeaders(),
                                body: JSON.stringify({
                                    application_id: this.credentials.applicationId,
                                    secret: this.credentials.secret
                                }),
                            })];
                    case 1:
                        response = _a.sent();
                        this.setToken(response.token);
                        return [2 /*return*/, response.token];
                    case 2:
                        error_1 = _a.sent();
                        if (error_1 instanceof got_1.HTTPError && (error_1.response.statusCode === 500 || error_1.response.statusCode === 403)) {
                            throw new types_1.InvalidCredentials();
                        }
                        throw error_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return CFToolsAuthorizationProvider;
}());
exports.CFToolsAuthorizationProvider = CFToolsAuthorizationProvider;
var EnterpriseAuthorizationProvider = /** @class */ (function (_super) {
    __extends(EnterpriseAuthorizationProvider, _super);
    function EnterpriseAuthorizationProvider(credentials, enterpriseToken) {
        var _this = _super.call(this, credentials) || this;
        _this.enterpriseToken = enterpriseToken;
        return _this;
    }
    EnterpriseAuthorizationProvider.prototype.provide = function (client) {
        return __awaiter(this, void 0, void 0, function () {
            var parent;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.provide.call(this, client)];
                    case 1:
                        parent = _a.sent();
                        return [2 /*return*/, types_1.EnterpriseAuthorization.from(this.enterpriseToken, parent)];
                }
            });
        });
    };
    EnterpriseAuthorizationProvider.prototype.fetchTokenHeaders = function () {
        return {
            'X-Enterprise-Access-Token': this.enterpriseToken,
        };
    };
    return EnterpriseAuthorizationProvider;
}(CFToolsAuthorizationProvider));
exports.EnterpriseAuthorizationProvider = EnterpriseAuthorizationProvider;
var NoOpAuthorizationProvider = /** @class */ (function () {
    function NoOpAuthorizationProvider() {
    }
    NoOpAuthorizationProvider.prototype.provide = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, {
                        asHeader: function () {
                            return {};
                        },
                        throwExpired: function (url) {
                            return new types_1.TokenExpired(url, {
                                type: types_1.AuthorizationType.NOOP,
                                token: '',
                                created: new Date(),
                                expiresAt: new Date(),
                            });
                        }
                    }];
            });
        });
    };
    NoOpAuthorizationProvider.prototype.reportExpired = function () {
    };
    return NoOpAuthorizationProvider;
}());
exports.NoOpAuthorizationProvider = NoOpAuthorizationProvider;
